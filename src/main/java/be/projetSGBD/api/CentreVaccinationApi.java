/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package be.projetSGBD.api;

import java.math.BigDecimal;
import be.projetSGBD.model.CentreVaccination;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "CentreVaccination", description = "the CentreVaccination API")
public interface CentreVaccinationApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/v1/addCentreVaccination : Create the centreVaccination
     * Create the centreVaccination
     *
     * @param centreVaccination centreVaccination object (optional)
     * @return created (status code 201)
     */
    @ApiOperation(value = "Create the centreVaccination", nickname = "createCentreVaccination", notes = "Create the centreVaccination", tags={ "centreVaccination", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "created") })
    @RequestMapping(value = "/api/v1/addCentreVaccination",
        consumes = { "application/xml", "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<CentreVaccination> createCentreVaccination(@ApiParam(value = "centreVaccination object"  )  @Valid @RequestBody(required = false) CentreVaccination centreVaccination) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /api/v1/centreVaccination/{idCentreVaccination} : Delete the centreVaccination
     * Deletes the centreVaccination
     *
     * @param idCentreVaccination centreVaccination id (required)
     * @return successful operation (status code 204)
     *         or Given user ID doesn&#39;t exist (status code 404)
     */
    @ApiOperation(value = "Delete the centreVaccination", nickname = "deleteCentreVaccination", notes = "Deletes the centreVaccination", tags={ "centreVaccination", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "successful operation"),
        @ApiResponse(code = 404, message = "Given user ID doesn't exist") })
    @RequestMapping(value = "/api/v1/centreVaccination/{idCentreVaccination}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteCentreVaccination(@ApiParam(value = "centreVaccination id",required=true) @PathVariable("idCentreVaccination") Long idCentreVaccination) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/centreVaccination/{idCentreVaccination} : Returns the centreVaccination
     * Returns the centreVaccination
     *
     * @param l CentreVaccination Identifier (required)
     * @return successful operation (status code 200)
     *         or Given centreVaccination ID doesn&#39;t exist (status code 404)
     */
    @ApiOperation(value = "Returns the centreVaccination", nickname = "getCentreVaccinationByIdCentreVaccination", notes = "Returns the centreVaccination", tags={ "centreVaccination", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 404, message = "Given centreVaccination ID doesn't exist") })
    @RequestMapping(value = "/api/v1/centreVaccination/{idCentreVaccination}",
        method = RequestMethod.GET)
    default ResponseEntity<CentreVaccination> getCentreVaccinationByIdCentreVaccination(@ApiParam(value = "CentreVaccination Identifier",required=true) @PathVariable("idCentreVaccination") long l) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
